[{"/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/index.js":"1","/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/App.js":"2","/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/pages/Login/index.js":"3","/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/pages/Dashboard/index.js":"4","/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/services/api.js":"5","/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/routes.js":"6","/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/pages/Register/index.js":"7","/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/pages/EventsPage/index.js":"8"},{"size":223,"mtime":1611892036252,"results":"9","hashOfConfig":"10"},{"size":297,"mtime":1611891609857,"results":"11","hashOfConfig":"10"},{"size":2338,"mtime":1611891401851,"results":"12","hashOfConfig":"10"},{"size":259,"mtime":1611889267234,"results":"13","hashOfConfig":"10"},{"size":117,"mtime":1611887993670,"results":"14","hashOfConfig":"10"},{"size":663,"mtime":1611889461039,"results":"15","hashOfConfig":"10"},{"size":3208,"mtime":1611891971368,"results":"16","hashOfConfig":"10"},{"size":4669,"mtime":1611892137712,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"awv6uh",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/index.js",[],"/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/App.js",[],"/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/pages/Login/index.js",["36"],"import React, { useState } from 'react';\nimport api from '../../services/api'\nimport { Alert, Container, Button, Form, FormGroup, Input } from 'reactstrap';\n\nexport default function Login({ history }) {\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [error, setError] = useState(false)\n    const [errorMessage, setErrorMessage] = useState(\"false\")\n\n    const handleSubmit = async evt => {\n        evt.preventDefault();\n        const response = await api.post('/login', { email, password })\n        const userId = response.data._id || false;\n\n        try {\n            if (userId) {\n                localStorage.setItem('user', userId)\n                history.push('/dashboard')\n            } else {\n                const { message } = response.data\n                setError(true)\n                setErrorMessage(message)\n                setTimeout(() => {\n                    setError(false)\n                    setErrorMessage(\"\")\n                }, 2000)\n            }\n        } catch (error) {\n\n        }\n    }\n\n    return (\n        <Container>\n            <h2>Login:</h2>\n            <p>Please <strong>Login</strong> into your account</p>\n            <Form onSubmit={handleSubmit}>\n                <div className=\"input-group\">\n                <FormGroup className=\"form-group-\"></FormGroup>\n                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                    <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Your email\" onChange={evt => setEmail(evt.target.value)} />\n                </FormGroup>\n                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                    <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Your password\" onChange={evt => setPassword(evt.target.value)} />\n                </FormGroup>\n                </div>\n                <FormGroup>\n                    <Button className=\"submit-btn\">Submit</Button>\n                </FormGroup>\n                <FormGroup>\n                    <Button className=\"secondary-btn\" onClick={() => history.push(\"/register\")}>New Account</Button>\n                </FormGroup>\n            </Form>\n            {error ? (\n                <Alert className=\"event-validation\" color=\"danger\"> Missing required information</Alert>\n            ) : \"\"}\n        </Container>\n    );\n}",["37","38"],"/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/pages/Dashboard/index.js",[],"/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/services/api.js",[],"/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/routes.js",[],"/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/pages/Register/index.js",[],"/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/pages/EventsPage/index.js",["39"],{"ruleId":"40","severity":1,"message":"41","line":9,"column":12,"nodeType":"42","messageId":"43","endLine":9,"endColumn":24},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":70,"column":29,"nodeType":"50","endLine":70,"endColumn":106},"no-unused-vars","'errorMessage' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["51"],"no-negated-in-lhs",["52"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]