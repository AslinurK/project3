[{"/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/index.js":"1","/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/App.js":"2","/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/pages/Login/index.js":"3","/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/pages/Dashboard/index.js":"4","/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/services/api.js":"5","/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/routes.js":"6","/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/pages/Register/index.js":"7","/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/pages/EventsPage/index.js":"8","/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/components/TopNav.js":"9","/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/pages/MyRegistrations/index.js":"10","/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/user-context.js":"11"},{"size":218,"mtime":1611952894090,"results":"12","hashOfConfig":"13"},{"size":486,"mtime":1611965074104,"results":"14","hashOfConfig":"13"},{"size":2708,"mtime":1611953070288,"results":"15","hashOfConfig":"13"},{"size":7989,"mtime":1611964469688,"results":"16","hashOfConfig":"13"},{"size":117,"mtime":1611898052484,"results":"17","hashOfConfig":"13"},{"size":864,"mtime":1611962729808,"results":"18","hashOfConfig":"13"},{"size":3477,"mtime":1611952754866,"results":"19","hashOfConfig":"13"},{"size":5529,"mtime":1611956239774,"results":"20","hashOfConfig":"13"},{"size":1401,"mtime":1611952459537,"results":"21","hashOfConfig":"13"},{"size":2520,"mtime":1611963043213,"results":"22","hashOfConfig":"13"},{"size":562,"mtime":1611953133726,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"awv6uh",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/index.js",[],["48","49"],"/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/App.js",[],"/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/pages/Login/index.js",[],"/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/pages/Dashboard/index.js",["50"],"/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/services/api.js",[],"/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/routes.js",[],"/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/pages/Register/index.js",[],"/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/pages/EventsPage/index.js",["51","52"],"\nimport React, { useState, useMemo, useEffect } from 'react';\nimport api from '../../services/api';\nimport { Alert, Container, Button, Form, FormGroup, Input, Label, DropdownItem, DropdownMenu, DropdownToggle, ButtonDropdown } from 'reactstrap';\nimport cameraIcon from '../../assets/camera.png'\nimport \"./events.css\";\n\nexport default function EventsPage({ history }) {\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [price, setPrice] = useState('')\n    const [thumbnail, setThumbnail] = useState(null)\n    const [sport, setSport] = useState('Sport')\n    const [date, setDate] = useState('')\n    const [error, setError] = useState(false)\n    const [success, setSuccess] = useState(false)\n    const [dropdownOpen, setOpen] = useState(false);\n    const user = localStorage.getItem('user');\n\n    useEffect(() => {\n        if (!user) history.push('/login');\n    }, [])\n\n    const toggle = () => setOpen(!dropdownOpen);\n\n    const preview = useMemo(() => {\n        return thumbnail ? URL.createObjectURL(thumbnail) : null;\n    }, [thumbnail])\n\n    const submitHandler = async (evt) => {\n        evt.preventDefault()\n\n        const eventData = new FormData();\n\n        eventData.append(\"thumbnail\", thumbnail)\n        eventData.append(\"sport\", sport)\n        eventData.append(\"title\", title)\n        eventData.append(\"price\", price)\n        eventData.append(\"description\", description)\n        eventData.append(\"date\", date)\n\n\n        try {\n            if (title !== \"\" &&\n                description !== \"\" &&\n                price !== \"\" &&\n                sport !== \"Sport\" &&\n                date !== \"\" &&\n                thumbnail !== null\n            ) {\n                await api.post(\"/event\", eventData, { headers: { user } })\n                setSuccess(true)\n                setTimeout(() => {\n                    setSuccess(false)\n                    history.push(\"/\")\n                }, 2000)\n            } else {\n                setError(true)\n                setTimeout(() => {\n                    setError(false)\n                }, 2000)\n            }\n        } catch (error) {\n            Promise.reject(error);\n            console.log(error);\n        }\n    }\n\n    const sportEventHandler = (sport) => setSport(sport);\n\n    return (\n        <Container>\n            <h2>Create your Event</h2>\n            <Form onSubmit={submitHandler}>\n                <div className=\"input-group\">\n                    <FormGroup>\n                        <Label>Upload Image: </Label>\n                        <Label id='thumbnail' style={{ backgroundImage: `url(${preview})` }} className={thumbnail ? 'has-thumbnail' : ''}>\n                            <Input type=\"file\" onChange={evt => setThumbnail(evt.target.files[0])} />\n                            <img src={cameraIcon} style={{ maxWidth: \"50px\" }} alt=\"upload icon image\" />\n                        </Label>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label>Title: </Label>\n                        <Input id=\"title\" type=\"text\" value={title} placeholder={'Event Title'} onChange={(evt) => setTitle(evt.target.value)} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label>Event description: </Label>\n                        <Input id=\"description\" type=\"text\" value={description} placeholder={'Event Description'} onChange={(evt) => setDescription(evt.target.value)} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label>Event price: </Label>\n                        <Input id=\"price\" type=\"text\" value={price} placeholder={'Event Price $0.00'} onChange={(evt) => setPrice(evt.target.value)} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label>Event date: </Label>\n                        <Input id=\"date\" type=\"date\" value={date} placeholder={'Event Price $0.00'} onChange={(evt) => setDate(evt.target.value)} />\n                    </FormGroup>\n                    <FormGroup>\n                        <ButtonDropdown isOpen={dropdownOpen} toggle={toggle}>\n                            <Button id=\"caret\" value={sport} disabled>{sport}</Button>\n                            <DropdownToggle caret />\n                            <DropdownMenu>\n                                <DropdownItem onClick={() => sportEventHandler('Strength')}>Outdoor Strength</DropdownItem>\n                                <DropdownItem onClick={() => sportEventHandler('Yoga')}>Outdoor Yoga</DropdownItem>\n                                <DropdownItem onClick={() => sportEventHandler('Cycling')}>Virtual Fitness Class</DropdownItem>\n                            </DropdownMenu>\n                        </ButtonDropdown>\n                    </FormGroup>\n                </div>\n                <FormGroup>\n                    <Button className=\"submit-btn\">Submit</Button>\n                </FormGroup>\n                <FormGroup>\n                    <Button className=\"secondary-btn\" onClick={() => history.push(\"/\")}>\n                        Cancel\n                    </Button>\n                </FormGroup>\n            </Form>\n            {error ? (\n                <Alert className=\"event-validation\" color=\"danger\"> Missing required information</Alert>\n            ) : \"\"}\n            {success ? (\n                <Alert className=\"event-validation\" color=\"success\"> The event was created successfully!</Alert>\n            ) : \"\"}\n        </Container>\n    )\n}","/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/components/TopNav.js",[],"/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/pages/MyRegistrations/index.js",["53"],"/Users/aslinurkeklikci/Desktop/Bootcamp/project3/frontend/src/user-context.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":27,"column":8,"nodeType":"60","endLine":27,"endColumn":10,"suggestions":"61"},{"ruleId":"58","severity":1,"message":"62","line":22,"column":8,"nodeType":"60","endLine":22,"endColumn":10,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":80,"column":29,"nodeType":"66","endLine":80,"endColumn":106},{"ruleId":"58","severity":1,"message":"67","line":14,"column":8,"nodeType":"60","endLine":14,"endColumn":10,"suggestions":"68"},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEvents'. Either include it or remove the dependency array.","ArrayExpression",["71"],"React Hook useEffect has missing dependencies: 'history' and 'user'. Either include them or remove the dependency array.",["72"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getMyEvents'. Either include it or remove the dependency array.",["73"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},"Update the dependencies array to be: [getEvents]",{"range":"80","text":"81"},"Update the dependencies array to be: [history, user]",{"range":"82","text":"83"},"Update the dependencies array to be: [getMyEvents]",{"range":"84","text":"85"},[1083,1085],"[getEvents]",[921,923],"[history, user]",[381,383],"[getMyEvents]"]